name: Build and Deploy Jupyter Book

on:
  push:
    paths:
    - 'Markdowns/**.md'
    - 'FrontPage/*.md'
    - '!JupyterBook/**'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        persist-credentials: false
        fetch-depth: 0
        
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    
    - name: Install Jupyter Book and dependencies
      run: |

        python -m pip install --upgrade pip
        
        # Check if jupyter-book is installed
        if ! command -v jupyter-book &> /dev/null; then
            pip install jupyter-book
        fi

    # Copy all markdown files from JupyterBook to the JupyterBook directory
    - name:  Clean old build Prepare files for Jupyter Book, Clean old build
      run: |

        rm -rf JupyterBook/_build
        rm -f JupyterBook/*.md
        rm -f JupyterBook/_toc.yml

        cp FrontPage/intro.md JupyterBook/

        rsync -av --include='*.md' --include='*/' --exclude='*' Markdowns/ JupyterBook/

    # Generate TOC 
    - name: Generate TOC
      run: |

        # Start the _toc.yml
        echo "format: jb-book" > JupyterBook/_toc.yml
        echo "root: intro" >> JupyterBook/_toc.yml
        echo "parts:" >> JupyterBook/_toc.yml
        
        # Handle markdown files at the root of /Markdowns (treat them as top-level chapters)
        for file in Markdowns/*.md; do
            baseName=$(basename -- "$file")
            noExtName="${baseName%.*}"
            echo "  - file: $noExtName" >> JupyterBook/_toc.yml
        done

        # Loop through each folder in /Markdowns
        for dir in Markdowns/*; do
            if [ -d "$dir" ]; then
                heading=$(basename -- "$dir")

                # Add the heading caption
                echo "- caption: $heading" >> JupyterBook/_toc.yml
                echo "  chapters:" >> JupyterBook/_toc.yml

                # Loop through markdown files inside the directory
                for file in "$dir"/*.md; do
                    baseName=$(basename -- "$file")
                    noExtName="${baseName%.*}"
                    echo "    - file: $noExtName" >> JupyterBook/_toc.yml
                done
            fi
        done
    
    - name: Print TOC for Debugging
      run: |
        echo "Content of _toc.yml:"
        cat JupyterBook/_toc.yml

    # Build the Jupyter Book
    - name: Build Jupyter Book
      run: |
        jupyter-book build JupyterBook

    # Commit and push changes if any exist
    - name: Commit and push changes
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add .
        git commit -m "Automated updates from GitHub Actions"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.MY_GITHUB_TOKEN }}
        branch: ${{ github.main }}

    # Deploy to GitHub Pages (push to the gh-pages branch)
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3.8.0
      with:
        github_token: ${{ secrets.MY_GITHUB_TOKEN }}
        publish_dir: ./JupyterBook/_build/html
        publish_branch: gh-pages
